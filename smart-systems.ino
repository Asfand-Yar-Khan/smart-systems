#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/b505904d-425e-43e3-9cf5-467560e052ea 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float heat;
  float humidity;
  float temperature;
  bool led1;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include "DHT.h"

//******************************************************************************************************************************************
#define LED 2
#define DHTPIN 4
DHT dht(DHTPIN, DHT11);

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(115200);   // baud rate
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 
  pinMode(LED,OUTPUT);
  dht.begin();
  delay(1500);

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  delay(2000);

  humidity = dht.readHumidity();
  if (t_conversion == 1)
  temperature = dht.readTemperature(true);   // For Farenheit true parameter is passed
  else
  temperature = dht.readTemperature(false);

  // Check if any reads failed and exit early (to try again).
  if (isnan(humidity) || isnan(temperature)) {
    Serial.println("Failed to read from DHT sensor!");
    return;
  }

  // Compute heat index in Fahrenheit (the default)
  // float hif = dht.computeHeatIndex(f, h);
  // Compute heat index in Celsius (isFahreheit = false)

  if (t_conversion == 1)
  heat = dht.computeHeatIndex(temperature, humidity);
  else
  heat = dht.computeHeatIndex(temperature, humidity, false);
}

/*
  Since Led1 is READ_WRITE variable, onLed1Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onLed1Change()  {
  if(led1 == 1)
  digitalWrite(LED, HIGH);
  else
  digitalWrite(LED, LOW);
}

void onTConversionChange(){
}
